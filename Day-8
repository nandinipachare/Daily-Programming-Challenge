#include <stdio.h>
#include <string.h>
#include <ctype.h>

// Function to reverse part of a string
void reverse(char *s, int l, int r) {
    while (l < r) {
        char temp = s[l];
        s[l] = s[r];
        s[r] = temp;
        l++;
        r--;
    }
}

void reverseWords(char *s) {
    int n = strlen(s);
    char temp[n + 1];
    int i = 0, idx = 0;

    // Step 1: Remove leading spaces
    while (i < n && isspace(s[i])) i++;

    // Step 2: Copy words into temp, reducing multiple spaces
    int space = 0;
    for (; i < n; i++) {
        if (isspace(s[i])) {
            if (!space) temp[idx++] = ' ';
            space = 1;
        } else {
            temp[idx++] = s[i];
            space = 0;
        }
    }

    // Remove trailing space if present
    if (idx > 0 && temp[idx - 1] == ' ')
        idx--;

    temp[idx] = '\0';

    // Step 3: Reverse entire string
    reverse(temp, 0, idx - 1);

    // Step 4: Reverse each word
    int start = 0;
    for (i = 0; i <= idx; i++) {
        if (temp[i] == ' ' || temp[i] == '\0') {
            reverse(temp, start, i - 1);
            start = i + 1;
        }
    }

    // Final result
    printf("%s\n", temp);
}

// Driver code
int main() {
    char s1[] = "the sky is blue";
    char s2[] = " hello world ";
    char s3[] = "a   good   example";
    char s4[] = " ";
    char s5[] = "word";

    reverseWords(s1); // Output: "blue is sky the"
    reverseWords(s2); // Output: "world hello"
    reverseWords(s3); // Output: "example good a"
    reverseWords(s4); // Output: ""
    reverseWords(s5); // Output: "word"

    return 0;
}

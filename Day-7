#include <stdio.h>

int trap(int* height, int n) {
    int left = 0, right = n - 1;
    int leftMax = 0, rightMax = 0;
    int water = 0;

    while (left < right) {
        if (height[left] < height[right]) {
            if (height[left] >= leftMax) {
                leftMax = height[left];
            } else {
                water += leftMax - height[left];
            }
            left++;
        } else {
            if (height[right] >= rightMax) {
                rightMax = height[right];
            } else {
                water += rightMax - height[right];
            }
            right--;
        }
    }
    return water;
}

int main() {
    // Test cases
    int height1[] = {0,1,0,2,1,0,1,3,2,1,2,1};
    int n1 = sizeof(height1)/sizeof(height1[0]);
    printf("Output: %d\n", trap(height1, n1)); // Expected 6

    int height2[] = {4,2,0,3,2,5};
    int n2 = sizeof(height2)/sizeof(height2[0]);
    printf("Output: %d\n", trap(height2, n2)); // Expected 9

    int height3[] = {1,1,1};
    int n3 = sizeof(height3)/sizeof(height3[0]);
    printf("Output: %d\n", trap(height3, n3)); // Expected 0

    int height4[] = {5};
    int n4 = sizeof(height4)/sizeof(height4[0]);
    printf("Output: %d\n", trap(height4, n4)); // Expected 0

    int height5[] = {2,0,2};
    int n5 = sizeof(height5)/sizeof(height5[0]);
    printf("Output: %d\n", trap(height5, n5)); // Expected 2

    return 0;
}

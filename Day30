#include <stdio.h>
#include <limits.h>

int coinChange(int* coins, int coinsSize, int amount) {
    // Create a DP array to store minimum coins for each amount
    int dp[amount + 1];
    
    // Initialize with a large value
    for (int i = 0; i <= amount; i++) {
        dp[i] = INT_MAX;
    }
    
    // Base case: 0 coins are needed to make amount 0
    dp[0] = 0;
    
    // Build the DP array
    for (int i = 1; i <= amount; i++) {
        for (int j = 0; j < coinsSize; j++) {
            if (coins[j] <= i && dp[i - coins[j]] != INT_MAX) {
                dp[i] = (dp[i] < dp[i - coins[j]] + 1) ? dp[i] : (dp[i - coins[j]] + 1);
            }
        }
    }
    
    return (dp[amount] == INT_MAX) ? -1 : dp[amount];
}

int main() {
    int coins1[] = {1, 2, 5};
    int amount1 = 11;
    printf("Test Case 1: %d\n", coinChange(coins1, 3, amount1)); // Output: 3
    
    int coins2[] = {2};
    int amount2 = 3;
    printf("Test Case 2: %d\n", coinChange(coins2, 1, amount2)); // Output: -1
    
    int coins3[] = {1};
    int amount3 = 0;
    printf("Test Case 3: %d\n", coinChange(coins3, 1, amount3)); // Output: 0
    
    return 0;
}

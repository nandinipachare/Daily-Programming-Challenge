#include <stdio.h>
#include <string.h>

// Function to find the longest common prefix
char* longestCommonPrefix(char strs[][201], int n) {
    if (n == 0) return "";

    static char prefix[201];
    strcpy(prefix, strs[0]);  // Assume first string as prefix

    for (int i = 1; i < n; i++) {
        // Reduce prefix until it matches the beginning of strs[i]
        while (strncmp(prefix, strs[i], strlen(prefix)) != 0) {
            prefix[strlen(prefix) - 1] = '\0'; // shorten prefix
            if (strlen(prefix) == 0) return ""; // no common prefix
        }
    }
    return prefix;
}

int main() {
    // Test Case 1
    char strs1[][201] = {"flower", "flow", "flight"};
    printf("Output: \"%s\"\n", longestCommonPrefix(strs1, 3));

    // Test Case 2
    char strs2[][201] = {"dog", "racecar", "car"};
    printf("Output: \"%s\"\n", longestCommonPrefix(strs2, 3));

    // Test Case 3
    char strs3[][201] = {"apple", "ape", "april"};
    printf("Output: \"%s\"\n", longestCommonPrefix(strs3, 3));

    // Test Case 4
    char strs4[][201] = {""};
    printf("Output: \"%s\"\n", longestCommonPrefix(strs4, 1));

    // Test Case 5
    char strs5[][201] = {"alone"};
    printf("Output: \"%s\"\n", longestCommonPrefix(strs5, 1));

    return 0;
}

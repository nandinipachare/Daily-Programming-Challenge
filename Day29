#include <stdio.h>
#include <stdlib.h>

// Function to compute nth Fibonacci using DP (Bottom-up)
unsigned long long fibonacci(int n) {
    if (n == 0) return 0;
    if (n == 1) return 1;

    unsigned long long *dp = (unsigned long long *)malloc((n + 1) * sizeof(unsigned long long));
    dp[0] = 0;
    dp[1] = 1;

    for (int i = 2; i <= n; i++) {
        dp[i] = dp[i - 1] + dp[i - 2];
    }

    unsigned long long result = dp[n];
    free(dp);
    return result;
}

int main() {
    int n;
    printf("Enter n: ");
    scanf("%d", &n);

    if (n < 0 || n > 1000) {
        printf("Input out of range! (0 <= n <= 1000)\n");
        return 0;
    }

    printf("F(%d) = %llu\n", n, fibonacci(n));
    return 0;
}
